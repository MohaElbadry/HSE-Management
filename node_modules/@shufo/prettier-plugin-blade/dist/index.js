"use strict";var f=Object.create;var n=Object.defineProperty;var b=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var h=Object.getPrototypeOf,w=Object.prototype.hasOwnProperty;var P=(e,r)=>{for(var t in r)n(e,t,{get:r[t],enumerable:!0})},o=(e,r,t,i)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of y(r))!w.call(e,s)&&s!==t&&n(e,s,{get:()=>r[s],enumerable:!(i=b(r,s))||i.enumerable});return e};var l=(e,r,t)=>(t=e!=null?f(h(e)):{},o(r||!e||!e.__esModule?n(t,"default",{value:e,enumerable:!0}):t,e)),x=e=>o(n({},"__esModule",{value:!0}),e);var S={};P(S,{defaultOptions:()=>m,languages:()=>A,options:()=>g,parsers:()=>C,printers:()=>L});module.exports=x(S);var c=require("prettier"),d=require("synckit"),a=l(require("path")),p=(e,r,t)=>{let i={indentSize:t.tabWidth,wrapLineLength:t.printWidth,wrapAttributes:t.singleAttributePerLine?"force-expand-multiline":t.bracketSameLine?"force-aligned":t.wrapAttributes,endWithNewline:t.endWithNewline,useTabs:t.useTabs,sortTailwindcssClasses:t.sortTailwindcssClasses,tailwindcssConfigPath:T(t.filepath,t.tailwindcssConfigPath),sortHtmlAttributes:t.sortHtmlAttributes,noMultipleEmptyLines:!0,noPhpSyntaxCheck:t.noPhpSyntaxCheck,customHtmlAttributesOrder:t.customHtmlAttributesOrder};return{type:"blade-formatter",body:(0,d.createSyncFn)(require.resolve("../src/worker"))(e,i),end:e.length,source:e,start:0}};function T(e,r){if(!r)return;if(a.default.isAbsolute(r??""))return r;let t=c.resolveConfigFile.sync(e);return a.default.resolve(a.default.dirname(t??""),r??"")}var u=e=>{let r=e.getValue();switch(r.type){case"blade-formatter":return r.body}throw new Error(`Unknown node type: ${r.type}`)};var m={tabWidth:4,printWidth:120},g={wrapAttributes:{type:"string",category:"Blade",default:"auto",description:"The way to wrap attributes. [auto|force|force-aligned|force-expand-multiline|aligned-multiple|preserve|preserve-aligned]",since:"1.0.0"},endWithNewLine:{type:"boolean",category:"Blade",default:!0,description:"End output with newline.",since:"1.0.0"},sortTailwindcssClasses:{type:"boolean",category:"Blade",default:!1,description:"Sort Tailwindcss classes automatically. This option respects `tailwind.config.js`.",since:"1.0.0"},tailwindcssConfigPath:{type:"string",category:"Blade",default:"",description:"Path to custom Tailwindcss config. This option is available only when `sortTailwindcssClasses` is present.",since:"1.5.7"},sortHtmlAttributes:{type:"string",category:"Blade",default:"none",description:"Sort HTML Attributes. [none|alphabetical|code-guide|idiomatic|vuejs|custom]",since:"1.5.0"},customHtmlAttributesOrder:{type:"string",category:"Blade",default:"",description:'Comma separated custom HTML attributes order. e.g. "id, aria-.+, class, src". To enable this you must specify sort html attributes option as `custom`. You can use regex for attribute names.',since:"1.8.0"},noPhpSyntaxCheck:{type:"boolean",category:"Blade",default:!1,description:"Disable PHP syntax checking",since:"1.7.0"}};var A=[{name:"Blade",parsers:["blade"],since:"1.0.0",extensions:[".blade.php"],tmScope:"source.blade.php",aceMode:"text",linguistLanguageId:33,vscodeLanguageIds:["blade"]}],C={blade:{parse:p,astFormat:"blade-format",locStart(e){return e.start},locEnd(e){return e.end}}},L={"blade-format":{print:u}};0&&(module.exports={defaultOptions,languages,options,parsers,printers});
//# sourceMappingURL=index.js.map
